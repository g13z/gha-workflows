name: Terraform Apply

on:
  workflow_call:
    inputs:
      region:
        description: "The AWS region"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "The AWS Access Key ID."
        required: false
      AWS_SECRET_ACCESS_KEY:
        description: "The AWS Secret Access Key."
        required: false
      AWS_ROLE_ARN:
        description: "The IAM Role ARN for GitHub's OIDC provider to assume to get short-lived credentials."
        required: false

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  apply:
    name: "Apply"
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ inputs.region }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_ARN }}
      TF_WORKSPACE: ${{ matrix.workspace }}

    strategy:
      fail-fast: false
      matrix:
        workspace: [backend]
        backend-tfvars: [tfvars/backend.tfvars]      

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Configure AWS credentials via Role to assume
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        continue-on-error: true
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Configure AWS credentials via access keys
        if: steps.configure-aws-credentials.outcome != 'success'
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: AWS STS Get Caller Identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config=${{ matrix.backend-tfvars }}
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve -var-file=${{ matrix.backend-tfvars }}
        continue-on-error: true
